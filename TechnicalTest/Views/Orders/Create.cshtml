@model TechnicalTest.Models.SoOrder
@{
    ViewData["Title"] = "Add New - Sales Order";
}

<div class="container mt-4">
    <h2 class="mb-4">Sales Order Information</h2>

    <form asp-action="Create" method="post">
        <div class="row mb-3">
            <div class="col-md-6">
                <label asp-for="OrderNo" class="form-label"> Sales Order Number</label>
                <input asp-for="OrderNo" class="form-control" required data-val="true" data-val-required="Sales Order Number is required" />
                <span asp-validation-for="OrderNo" class="text-danger"></span>
            </div>
            <div class="col-md-6">
                <label asp-for="OrderDate" class="form-label">Order Date</label>
                <input asp-for="OrderDate" type="date" class="form-control" required data-val="true" data-val-required="Order Date is required" />
                <span asp-validation-for="OrderDate" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label asp-for="ComCustomerId" class="form-label">Customer</label>
                <select asp-for="ComCustomerId" class="form-select" asp-items="ViewBag.Customers" required data-val="true" data-val-required="Customer is required">
                    <option value="">-- Select Customer --</option>
                </select>
                <span asp-validation-for="ComCustomerId" class="text-danger"></span>
            </div>

            <div class="col-md-6">
                <label asp-for="Address" class="form-label">Address</label>
                <textarea asp-for="Address" class="form-control" rows="4"></textarea>
            </div>
        </div>

        <hr />

        <h4>Detail Item Information</h4>

        <table class="table table-bordered" id="item-table">
            <thead class="table-light">
                <tr>
                    <th>Item Name</th>
                    <th style="width: 120px;">QTY</th>
                    <th style="width: 150px;">Price</th>
                    <th style="width: 150px;">Total</th>
                    <th style="width: 50px;">
                        <button type="button" class="btn btn-sm btn-success" id="add-item">
                            <i class="bi bi-plus-lg"></i>
                        </button>
                    </th>
                </tr>
            </thead>
            <tbody id="item-body">
            </tbody>
        </table>

        <div class="row mb-3">
            <div class="col-md-6">
                <label class="form-label fw-bold">Total Item</label>
                <input type="text" id="TotalQty" class="form-control" readonly />
            </div>
            <div class="col-md-6">
                <label class="form-label fw-bold">Total Amount</label>
                <input type="text" id="TotalAmount" class="form-control" readonly />
            </div>
        </div>

        <input type="hidden" name="ItemsJson" id="ItemsJson" />

        <div id="pagination" class="d-flex justify-content-center mt-3">
            <button class="btn btn-sm btn-secondary" id="prev-page" disabled>&laquo; Previous</button>
            <span id="page-info" class="mx-2">Page 1</span>
            <button class="btn btn-sm btn-secondary" id="next-page">Next &raquo;</button>
        </div>
        <div class="mt-4">
            <button type="submit" class="btn btn-primary me-2">Save</button>
            <a asp-action="Index" class="btn btn-secondary">Close</a>
        </div>
    </form>
</div>


@section Scripts {
    <script>
        document.getElementById('add-item').addEventListener('click', function () {
            const tbody = document.getElementById('item-body');

            const newRow = document.createElement('tr');
            newRow.innerHTML = `
                <td><input type="text" name="ItemName" class="form-control item-name" required></td>
                <td><input type="number" name="Quantity" class="form-control qty" min="1" required></td>
                <td><input type="number" name="Price" class="form-control price" min="0" step="0.01" required></td>
                <td><input type="text" class="form-control total" readonly></td>
                <td>
                    <button type="button" class="btn btn-sm btn-danger remove-item">
                        <i class="bi bi-x-lg"></i>
                    </button>
                </td>
            `;
            tbody.appendChild(newRow);
            updateTotals();
        });
        document.addEventListener('click', function (e) {
            if (e.target.closest('.remove-item')) {
                e.target.closest('tr').remove();
                updateTotals();
            }
        });

        document.addEventListener('input', function (e) {
            if (e.target.matches('.qty') || e.target.matches('.price')) {
                const row = e.target.closest('tr');
                const qty = parseFloat(row.querySelector('.qty').value) || 0;
                const price = parseFloat(row.querySelector('.price').value) || 0;
                const total = qty * price;
                row.querySelector('.total').value = total.toFixed(2);
                updateTotals();
            }
        });
        function updateTotals() {
            let totalQty = 0;
            let totalAmount = 0;

            const rows = document.querySelectorAll('#item-body tr');
            rows.forEach(row => {
                const qty = parseFloat(row.querySelector('.qty')?.value) || 0;
                const price = parseFloat(row.querySelector('.price')?.value) || 0;

                totalQty += qty;
                totalAmount += qty * price;
            });

            document.getElementById('TotalQty').value = totalQty;
            document.getElementById('TotalAmount').value = totalAmount.toFixed(2);
                   updatePagination(rows);
        }

        document.querySelector('form').addEventListener('submit', function () {
            const items = [];
            const rows = document.querySelectorAll('#item-body tr');

            rows.forEach(row => {
                const itemName = row.querySelector('.item-name')?.value;
                const quantity = parseInt(row.querySelector('.qty')?.value);
                const price = parseFloat(row.querySelector('.price')?.value);

                if (itemName && quantity && !isNaN(price)) {
                    items.push({ itemName, quantity, price });
                }
            });

            document.getElementById('ItemsJson').value = JSON.stringify(items);
        });


        let currentPage = 1;
        const rowsPerPage = 5;

        function updatePagination(rows) {
            const totalPages = Math.ceil(rows.length / rowsPerPage);
            const startIndex = (currentPage - 1) * rowsPerPage;
            const endIndex = startIndex + rowsPerPage;

            rows.forEach((row, index) => {
                row.style.display = (index >= startIndex && index < endIndex) ? '' : 'none';
            });

            document.getElementById('page-info').textContent = `Page ${currentPage}`;
            document.getElementById('prev-page').disabled = currentPage === 1;
            document.getElementById('next-page').disabled = currentPage === totalPages;
        }

        // Handle page navigation
        document.getElementById('prev-page').addEventListener('click', function() {
            if (currentPage > 1) {
                currentPage--;
                updatePagination(document.querySelectorAll('#item-body tr'));
            }
        });

        document.getElementById('next-page').addEventListener('click', function() {
            const totalPages = Math.ceil(document.querySelectorAll('#item-body tr').length / rowsPerPage);
            if (currentPage < totalPages) {
                currentPage++;
                updatePagination(document.querySelectorAll('#item-body tr'));
            }
        });

        // Init
        window.addEventListener('load', function() {
            updateTotals();
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
